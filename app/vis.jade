div(layout='row' flex)
	md-switch(flex='20' ng-model='vm.paused' ng-change='vm.click(vm.paused)') {{vm.paused? 'Paused' : 'Play'}}
	div(layout='column' flex)
		b signal params
		slider-der(flex min= '5' max='100' step='1' label='cycle' my-data='S.cycle')
		slider-der(flex min= '0' max='1' step='.1' label='offset' my-data='S.offset' getter='true')
		slider-der(flex min= '1' max='100' step='5' label='distance' my-data='S.d' getter='true')
		slider-der(flex min= '0.02' max='1' step='.02' label='red' my-data='S.red')

	div(layout='column' flex)
		b density
		slider-der(flex min= '.025' max='1' step='.025' label='k' my-data='S.k' getter='true')
		//- slider-der(flex min= '5' max='200' step='5' label='#signals' my-data='S.num_signals' getter='true')
		slider-der(flex min= '.01' max='.35' step='.01' label='k0' my-data='S.k0' getter='true')
			
svg.vis(version="1.1" baseProfile="basic" x="0" y="0" viewBox="0 0 110 110")
	g.g-main(transform='translate(55,55)' )
		circle.road(r='50')
		g.cars
			g.g-car(ng-repeat='car in traffic.cars track by car.id' ng-attr-transform='{{vm.rotator(car)}}')
				rect.car( width='.2' height='2' y='-1' x='-.1' ng-attr-fill='{{::car.color}}')
		g.signals
			g.g-signal(ng-repeat='s in traffic.signals track by s.id' d3-der='{transform: vm.rotator(s) }' )
				rect.signal(width='.5' height='5' y='-2' x='-.25' ng-class='{"red": (!s.green)}')

mfd-chart(data='vm.data_theory' memory='vm.traffic.memory.long_term')
